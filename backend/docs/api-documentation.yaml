openapi: 3.0.0
info:
  version: 1.0.0
  title: HomeService API
  description: Complete API documentation for HomeService platform
  contact:
    name: API Support
    email: support@homeservice.com
servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://backend-patient-morning-1303.fly.dev/api
    description: Production server
security:
  - bearerAuth: []
tags:
  - name: Usuarios
    description: Operaciones para el manejo de Usuarios
  - name: Servicios
    description: Operaciones para el manejo de Servicios
  - name: Reservas
    description: Operaciones para el manejo de Reservas
  - name: Autenticación
    description: Operaciones relacionadas con la autenticación y autorización de usuarios
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CreateUsuario:
      type: object
      properties:
        nombre:
          type: string
          minLength: 2
          maxLength: 50
          pattern: ^[a-zA-ZÀ-ÿ\s]+$
          description: Nombre del usuario
          example: Juan
        apellido:
          type: string
          minLength: 2
          maxLength: 50
          pattern: ^[a-zA-ZÀ-ÿ\s]+$
          description: Apellido del usuario
          example: Pérez
        mail:
          type: string
          maxLength: 100
          format: email
          description: Correo electrónico del usuario
          example: juan.perez@gmail.com
        tipoDoc:
          type: string
          enum:
            - DNI
            - CUIT
            - CUIL
          description: Tipo de documento
          example: DNI
        numeroDoc:
          type: string
          minLength: 7
          maxLength: 13
          pattern: ^[0-9\-]+$
          description: Número de documento
          example: "12345678"
        telefono:
          type: string
          pattern: ^[+]?[0-9\s\-()]{8,20}$
          description: Número de teléfono
          example: +54 11 1234-5678
        direccion:
          type: string
          minLength: 5
          maxLength: 200
          description: Dirección del usuario
          example: Av. Corrientes 1234
        contrasena:
          type: string
          minLength: 6
          description: Contraseña del usuario
          example: Password123
        foto:
          type: string
          maxLength: 200
          format: uri
          description: URL de la foto de perfil del usuario
          example: http://example.com/foto.jpg
        estado:
          type: string
          enum:
            - activo
            - inactivo
          default: activo
          description: Estado del usuario
          example: activo
        nombreFantasia:
          type: string
          minLength: 2
          maxLength: 30
          description: Nombre de fantasía del prestatario
          example: Servicios SRL
        descripcion:
          type: string
          description: Descripción del prestatario
          example: Ofrecemos servicios de plomería y electricidad.
      required:
        - nombre
        - apellido
        - mail
        - tipoDoc
        - numeroDoc
        - telefono
        - direccion
        - contrasena
    LoginUsuario:
      type: object
      properties:
        mail:
          type: string
          format: email
          description: Correo electrónico del usuario
          example: juan.perez@gmail.com
        contrasena:
          type: string
          minLength: 6
          description: Contraseña del usuario
          example: Password123
      required:
        - mail
        - contrasena
    UsuarioResponse:
      type: object
      properties:
        id:
          type: number
          description: ID único del usuario
          example: 1
        mail:
          type: string
          description: Email del usuario
          example: usuario@example.com
        nombre:
          type: string
          description: Nombre del usuario
          example: Juan
        apellido:
          type: string
          description: Apellido del usuario
          example: Pérez
        tipoDoc:
          type: string
          description: Tipo de documento
          example: DNI
        numeroDoc:
          type: string
          description: Número de documento
          example: "12345678"
        telefono:
          type: string
          description: Teléfono
          example: +54 11 1234-5678
        direccion:
          type: string
          description: Dirección
          example: Av. Corrientes 1234
        nombreFantasia:
          type: string
          nullable: true
          description: Nombre de fantasía
          example: Plomería Pérez
        descripcion:
          type: string
          nullable: true
          description: Descripción
          example: Plomero con experiencia
      required:
        - id
        - mail
        - nombre
        - apellido
        - tipoDoc
        - numeroDoc
        - telefono
        - direccion
        - nombreFantasia
        - descripcion
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de error
          example: Validation failed
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                description: Campo que falló
                example: email
              message:
                type: string
                description: Mensaje de error
                example: Email inválido
            required:
              - field
              - message
          description: Detalles de errores de validación
      required:
        - message
    TipoServicioInfo:
      type: object
      properties:
        id:
          type: number
          description: ID del tipo de servicio
          example: 1
        nombreTipo:
          type: string
          description: Nombre del tipo de servicio
          example: Plomería
        descripcionTipo:
          type: string
          description: Descripción del tipo de servicio
          example: Servicios de plomería profesional
      required:
        - id
        - nombreTipo
        - descripcionTipo
    TareaInfo:
      type: object
      properties:
        nombreTarea:
          type: string
          description: Nombre de la tarea
          example: Reparación de canillas
      required:
        - nombreTarea
    PrestatarioWithRating:
      type: object
      properties:
        id:
          type: number
          description: ID único del prestatario
          example: 1
        nombre:
          type: string
          description: Nombre del prestatario
          example: Juan
        apellido:
          type: string
          description: Apellido del prestatario
          example: Pérez
        nombreFantasia:
          type: string
          description: Nombre de fantasía del prestatario
          example: Plomería Pérez
        descripcion:
          type: string
          nullable: true
          description: Descripción del prestatario
          example: Plomero con más de 10 años de experiencia
        foto:
          type: string
          nullable: true
          description: URL de la foto de perfil
          example: http://localhost:3000/uploads/profiles/optimized_1.webp
        tiposDeServicio:
          type: array
          items:
            $ref: "#/components/schemas/TipoServicioInfo"
          description: Tipos de servicio que ofrece el prestatario
        tareas:
          type: array
          items:
            $ref: "#/components/schemas/TareaInfo"
          description: Tareas específicas que puede realizar
        calificacion:
          type: number
          minimum: 0
          maximum: 5
          description: Calificación promedio del prestatario (0-5)
          example: 4.5
      required:
        - id
        - nombre
        - apellido
        - nombreFantasia
        - descripcion
        - foto
        - tiposDeServicio
        - tareas
        - calificacion
    PaginationInfo:
      type: object
      properties:
        page:
          type: number
          description: Página actual
          example: 1
        maxItems:
          type: number
          description: Elementos por página
          example: 6
        totalPages:
          type: number
          description: Total de páginas disponibles
          example: 5
      required:
        - page
        - maxItems
        - totalPages
      description: Información de paginación
    FindPrestatarioByTipoServicioAndZona:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
          example: found prestatarios
        data:
          type: array
          items:
            $ref: "#/components/schemas/PrestatarioWithRating"
          description: Lista de prestatarios encontrados
        pagination:
          $ref: "#/components/schemas/PaginationInfo"
      required:
        - message
        - data
        - pagination
    Turno:
      type: object
      properties:
        id:
          type: number
          description: ID del turno
          example: 1
        fechaTurno:
          type: string
          description: Fecha del turno
          example: 2024-03-15
        horaTurno:
          type: string
          description: Hora del turno
          example: 14:30
        estado:
          type: string
          description: Estado del turno
          example: confirmado
        calificacion:
          type: number
          nullable: true
          description: Calificación del turno (1-5)
          example: 4.5
        comentario:
          type: string
          nullable: true
          description: Comentario del cliente
          example: Excelente servicio
      required:
        - id
        - fechaTurno
        - horaTurno
        - estado
        - calificacion
        - comentario
    Tarea:
      type: object
      properties:
        id:
          type: number
          description: ID de la tarea
          example: 1
        nombreTarea:
          type: string
          description: Nombre de la tarea
          example: Reparación de canillas
        descripcionTarea:
          type: string
          description: Descripción de la tarea
          example: Arreglo de grifería
        duracionTarea:
          type: number
          description: Duración de la tarea en minutos
          example: 60
        tipoServicio:
          type: number
          description: ID del tipo de servicio
          example: 2
      required:
        - id
        - nombreTarea
        - descripcionTarea
        - duracionTarea
        - tipoServicio
      description: Tarea asociada al servicio
    Servicio:
      type: object
      properties:
        id:
          type: number
          description: ID del servicio
          example: 1
        descripcionServicio:
          type: string
          description: Descripción del servicio
          example: Servicio de plomería profesional
        precio:
          type: number
          description: Precio del servicio
          example: 2500
        estado:
          type: string
          description: Estado del servicio
          example: activo
        tarea:
          $ref: "#/components/schemas/Tarea"
      required:
        - id
        - precio
        - estado
        - tarea
    TipoServicio:
      type: object
      properties:
        id:
          type: number
          description: ID del tipo de servicio
          example: 1
        nombreTipo:
          type: string
          description: Nombre del tipo de servicio
          example: Plomería
        descripcionTipo:
          type: string
          description: Descripción del tipo de servicio
          example: Servicios de plomería profesional
      required:
        - id
        - nombreTipo
        - descripcionTipo
    Horario:
      type: object
      properties:
        id:
          type: number
          description: ID del horario
          example: 1
        diaSemana:
          type: string
          description: Día de la semana
          example: Lunes
        horaInicio:
          type: string
          description: Hora de inicio
          example: 09:00
        horaFin:
          type: string
          description: Hora de fin
          example: 17:00
      required:
        - id
        - diaSemana
        - horaInicio
        - horaFin
    UsuarioCompleteResponse:
      type: object
      properties:
        id:
          type: number
          description: ID único del usuario
          example: 1
        mail:
          type: string
          description: Email del usuario
          example: usuario@example.com
        nombre:
          type: string
          description: Nombre del usuario
          example: Juan
        apellido:
          type: string
          description: Apellido del usuario
          example: Pérez
        tipoDoc:
          type: string
          description: Tipo de documento
          example: DNI
        numeroDoc:
          type: string
          description: Número de documento
          example: "12345678"
        telefono:
          type: string
          description: Teléfono
          example: +54 11 1234-5678
        direccion:
          type: string
          description: Dirección
          example: Av. Corrientes 1234
        nombreFantasia:
          type: string
          nullable: true
          description: Nombre de fantasía
          example: Plomería Pérez
        descripcion:
          type: string
          nullable: true
          description: Descripción
          example: Plomero con experiencia
        foto:
          type: string
          nullable: true
          description: URL de la foto de perfil
          example: http://localhost:3000/uploads/profiles/optimized_1.webp
        estado:
          type: string
          description: Estado del usuario
          example: activo
        turnos:
          type: array
          items:
            $ref: "#/components/schemas/Turno"
          description: Turnos asociados al usuario
        servicios:
          type: array
          items:
            $ref: "#/components/schemas/Servicio"
          description: Servicios ofrecidos por el usuario
        tiposDeServicio:
          type: array
          items:
            $ref: "#/components/schemas/TipoServicio"
          description: Tipos de servicio que ofrece el usuario
        horarios:
          type: array
          items:
            $ref: "#/components/schemas/Horario"
          description: Horarios de disponibilidad del usuario
      required:
        - id
        - mail
        - nombre
        - apellido
        - tipoDoc
        - numeroDoc
        - telefono
        - direccion
        - nombreFantasia
        - descripcion
        - foto
        - estado
        - turnos
        - servicios
        - tiposDeServicio
        - horarios
    FindAllUsuarios:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
          example: found all Usuarios
        data:
          type: array
          items:
            $ref: "#/components/schemas/UsuarioCompleteResponse"
          description: Lista completa de usuarios con todas sus relaciones
      required:
        - message
        - data
    NotFoundResponse:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de error cuando no se encuentran prestatarios
          example: No prestatarios found for the given tipoServicio and zona
      required:
        - message
    RecuperarContrasena:
      type: object
      properties:
        mail:
          type: string
          format: email
          description: Correo electrónico del usuario
          example: juan.perez@gmail.com
      required:
        - mail
    ValidarCodigo:
      type: object
      properties:
        mail:
          type: string
          format: email
          description: Correo electrónico del usuario
          example: juan.perez@gmail.com
        codigo:
          type: string
          description: Código de recuperación de 6 dígitos
          example: "123456"
      required:
        - mail
        - codigo
    CambiarPassword:
      type: object
      properties:
        mail:
          type: string
          format: email
          description: Correo electrónico del usuario
          example: juan.perez@gmail.com
        codigo:
          type: string
          description: Código de recuperación de 6 dígitos
          example: "123456"
        nuevaContrasena:
          type: string
          minLength: 6
          description: Nueva contraseña (mínimo 6 caracteres)
          example: NuevaPassword123
      required:
        - mail
        - codigo
        - nuevaContrasena
    IdParam:
      type: object
      properties:
        id:
          type: string
          pattern: ^\d+$
          description: ID numérico del usuario
          example: "1"
      required:
        - id
    UserIdParam:
      type: object
      properties:
        userId:
          type: string
          pattern: ^\d+$
          description: ID numérico del usuario
          example: "1"
      required:
        - userId
    PaginationQuery:
      type: object
      properties:
        maxItems:
          type: number
          minimum: 1
          maximum: 50
          default: 5
          description: Número máximo de elementos por página
          example: 5
        page:
          type: number
          minimum: 1
          default: 1
          description: Número de página
          example: 1
        orderBy:
          type: string
          description: Campo por el cual ordenar los resultados
          example: nombre
    FileUpload:
      type: object
      properties:
        profileImage:
          type: string
          format: binary
          description: Archivo de imagen para el perfil del usuario
      required:
        - profileImage
    SuccessMessage:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de éxito
          example: Operación completada exitosamente
      required:
        - message
    LoginResponse:
      type: object
      properties:
        message:
          type: string
          example: Login exitoso
        token:
          type: string
          description: JWT token para autenticación
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        data:
          $ref: "#/components/schemas/UsuarioResponse"
      required:
        - message
        - token
        - data
    ImageUploadResponse:
      type: object
      properties:
        message:
          type: string
          example: Foto de perfil actualizada correctamente
        imageUrl:
          type: string
          format: uri
          description: URL de la imagen subida
          example: http://localhost:3000/uploads/profiles/usuario1.jpg
        user:
          type: object
          properties:
            id:
              type: number
            foto:
              type: string
              nullable: true
              format: uri
          required:
            - id
            - foto
      required:
        - message
        - imageUrl
        - user
    CommentsResponse:
      type: object
      properties:
        message:
          type: string
          example: Comentarios encontrados
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
              comentario:
                type: string
              calificacion:
                type: number
                minimum: 1
                maximum: 5
              fechaCreacion:
                type: string
                format: date-time
              cliente:
                type: object
                properties:
                  id:
                    type: number
                  nombre:
                    type: string
                  apellido:
                    type: string
                required:
                  - id
                  - nombre
                  - apellido
            required:
              - id
              - comentario
              - calificacion
              - fechaCreacion
              - cliente
        pagination:
          type: object
          properties:
            page:
              type: number
            maxItems:
              type: number
            totalComments:
              type: number
            totalPages:
              type: number
          required:
            - page
            - maxItems
            - totalComments
            - totalPages
        average:
          type: number
          description: Calificación promedio
          example: 4.2
      required:
        - message
        - data
        - pagination
        - average
    ConflictResponse:
      type: object
      properties:
        error:
          type: string
          description: Código del error de conflicto
          example: EMAIL_ALREADY_EXISTS
        message:
          type: string
          description: Descripción del error
          example: El mail ya está registrado por otro usuario
      required:
        - error
        - message
    FindAllUsuariosResponse:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
          example: found all Usuarios
        data:
          type: array
          items:
            $ref: "#/components/schemas/UsuarioCompleteResponse"
          description: Lista completa de usuarios con todas sus relaciones
      required:
        - message
        - data
    FindPrestatariosResponse:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
          example: found prestatarios
        data:
          type: array
          items:
            $ref: "#/components/schemas/PrestatarioWithRating"
          description: Lista de prestatarios encontrados
        pagination:
          $ref: "#/components/schemas/PaginationInfo"
      required:
        - message
        - data
        - pagination
  parameters: {}
paths:
  /api/usuario:
    post:
      description: Crear un nuevo usuario
      summary: Crear usuario
      tags:
        - Usuarios
      requestBody:
        description: Datos del usuario a crear
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUsuario"
      responses:
        "201":
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Usuario creado exitosamente
                  data:
                    $ref: "#/components/schemas/UsuarioResponse"
                required:
                  - message
                  - data
        "400":
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      description: Obtener todos los usuarios
      summary: Listar usuarios completos
      tags:
        - Usuarios
      responses:
        "200":
          description: Lista de usuarios con turnos, servicios, tipos de servicio,
            horarios y tareas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: found all Usuarios
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/FindAllUsuariosResponse"
                required:
                  - message
                  - data
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/usuario/recuperar:
    post:
      description: Recuperar contraseña de usuario
      summary: Recuperar contraseña
      tags:
        - Autenticación
      requestBody:
        description: Correo electrónico para recuperación de contraseña
        content:
          application/json:
            schema:
              type: object
              properties:
                mail:
                  type: string
                  format: email
                  description: Correo electrónico del usuario
                  example: juan.perez@gmail.com
              required:
                - mail
      responses:
        "200":
          description: Correo de recuperación enviado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de éxito
                    example: Operación completada exitosamente
                required:
                  - message
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/usuario/validar-codigo:
    post:
      description: Validar código de recuperación de contraseña
      summary: Validar código de recuperación
      tags:
        - Autenticación
      requestBody:
        description: Código de recuperación y correo electrónico
        content:
          application/json:
            schema:
              type: object
              properties:
                mail:
                  type: string
                  format: email
                  description: Correo electrónico del usuario
                  example: juan.perez@gmail.com
                codigo:
                  type: string
                  description: Código de recuperación de 6 dígitos
                  example: "123456"
              required:
                - mail
                - codigo
      responses:
        "200":
          description: Código de recuperación válido
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de éxito
                    example: Operación completada exitosamente
                required:
                  - message
        "400":
          description: Código inválido o expirado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/usuario/cambiar-password:
    post:
      description: Cambiar contraseña usando código de recuperación
      summary: Cambiar contraseña
      tags:
        - Autenticación
      requestBody:
        description: Datos para cambiar la contraseña
        content:
          application/json:
            schema:
              type: object
              properties:
                mail:
                  type: string
                  format: email
                  description: Correo electrónico del usuario
                  example: juan.perez@gmail.com
                codigo:
                  type: string
                  description: Código de recuperación de 6 dígitos
                  example: "123456"
                nuevaContrasena:
                  type: string
                  minLength: 6
                  description: Nueva contraseña (mínimo 6 caracteres)
                  example: NuevaPassword123
              required:
                - mail
                - codigo
                - nuevaContrasena
      responses:
        "200":
          description: Contraseña cambiada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de éxito
                    example: Operación completada exitosamente
                required:
                  - message
        "400":
          description: Código inválido o expirado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/usuario/upload-profile-image/{userId}:
    post:
      description: Subir imagen de perfil para un usuario
      summary: Subir imagen de perfil
      tags:
        - Usuarios
      parameters:
        - schema:
            type: string
            pattern: ^\d+$
            description: ID numérico del usuario
            example: "1"
          required: true
          description: ID numérico del usuario
          name: userId
          in: path
      requestBody:
        description: Archivo de imagen a subir
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profileImage:
                  type: string
                  format: binary
                  description: Archivo de imagen para el perfil del usuario
              required:
                - profileImage
      responses:
        "200":
          description: Imagen de perfil subida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Foto de perfil actualizada correctamente
                  imageUrl:
                    type: string
                    format: uri
                    description: URL de la imagen subida
                    example: http://localhost:3000/uploads/profiles/usuario1.jpg
                  user:
                    type: object
                    properties:
                      id:
                        type: number
                      foto:
                        type: string
                        nullable: true
                        format: uri
                    required:
                      - id
                      - foto
                required:
                  - message
                  - imageUrl
                  - user
        "400":
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/usuario/login:
    get:
      description: Iniciar sesión de usuario
      summary: Login de usuario
      tags:
        - Autenticación
      parameters:
        - schema:
            type: string
            format: email
            description: Correo electrónico del usuario
            example: juan.perez@gmail.com
          required: true
          description: Correo electrónico del usuario
          name: mail
          in: query
        - schema:
            type: string
            minLength: 6
            description: Contraseña del usuario
            example: Password123
          required: true
          description: Contraseña del usuario
          name: contrasena
          in: query
      responses:
        "200":
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login exitoso
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ID único del usuario
                        example: 1
                      mail:
                        type: string
                        description: Email del usuario
                        example: usuario@example.com
                      nombre:
                        type: string
                        description: Nombre del usuario
                        example: Juan
                      apellido:
                        type: string
                        description: Apellido del usuario
                        example: Pérez
                    required:
                      - id
                      - mail
                      - nombre
                      - apellido
                required:
                  - message
                  - token
                  - data
        "400":
          description: Faltan datos de login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/usuario/{id}:
    get:
      description: Obtener un usuario por ID pero con todas sus relaciones
      summary: Trae un usuario y toda su información
      tags:
        - Usuarios
      parameters:
        - schema:
            type: string
            pattern: ^\d+$
            description: ID del usuario
            example: "1"
          required: true
          description: ID del usuario
          name: id
          in: path
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: found one usuario
                  data:
                    $ref: "#/components/schemas/FindAllUsuariosResponse"
                required:
                  - message
                  - data
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      description: Actualizar información de un usuario
      summary: Actualizar usuario
      tags:
        - Usuarios
      parameters:
        - schema:
            type: string
            pattern: ^\d+$
            description: ID del usuario
            example: "1"
          required: true
          description: ID del usuario
          name: id
          in: path
      requestBody:
        description: Datos del usuario a actualizar
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  minLength: 2
                  maxLength: 50
                  pattern: ^[a-zA-ZÀ-ÿ\s]+$
                  description: Nombre del usuario
                  example: Juan
                apellido:
                  type: string
                  minLength: 2
                  maxLength: 50
                  pattern: ^[a-zA-ZÀ-ÿ\s]+$
                  description: Apellido del usuario
                  example: Pérez
                mail:
                  type: string
                  maxLength: 100
                  format: email
                  description: Correo electrónico del usuario
                  example: juan.perez@gmail.com
                tipoDoc:
                  type: string
                  enum:
                    - DNI
                    - CUIT
                    - CUIL
                  description: Tipo de documento
                  example: DNI
                numeroDoc:
                  type: string
                  minLength: 7
                  maxLength: 13
                  pattern: ^[0-9\-]+$
                  description: Número de documento
                  example: "12345678"
                telefono:
                  type: string
                  pattern: ^[+]?[0-9\s\-()]{8,20}$
                  description: Número de teléfono
                  example: +54 11 1234-5678
                direccion:
                  type: string
                  minLength: 5
                  maxLength: 200
                  description: Dirección del usuario
                  example: Av. Corrientes 1234
                contrasena:
                  type: string
                  minLength: 6
                  description: Contraseña del usuario
                  example: Password123
                foto:
                  type: string
                  maxLength: 200
                  format: uri
                  description: URL de la foto de perfil del usuario
                  example: http://example.com/foto.jpg
                estado:
                  type: string
                  enum:
                    - activo
                    - inactivo
                  default: activo
                  description: Estado del usuario
                  example: activo
                nombreFantasia:
                  type: string
                  minLength: 2
                  maxLength: 30
                  description: Nombre de fantasía del prestatario
                  example: Servicios SRL
                descripcion:
                  type: string
                  description: Descripción del prestatario
                  example: Ofrecemos servicios de plomería y electricidad.
      responses:
        "200":
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: updated usuario
                  data:
                    $ref: "#/components/schemas/UsuarioResponse"
                required:
                  - message
                  - data
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflicto - datos ya existen
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: EMAIL_ALREADY_EXISTS
                  message:
                    type: string
                    example: El mail ya está registrado por otro usuario
                required:
                  - error
                  - message
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      description: Eliminar un usuario
      summary: Eliminar usuario
      tags:
        - Usuarios
      parameters:
        - schema:
            type: string
            pattern: ^\d+$
            description: ID del usuario a eliminar
            example: "1"
          required: true
          description: ID del usuario a eliminar
          name: id
          in: path
      responses:
        "200":
          description: Usuario eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: deleted usuario
                  data:
                    $ref: "#/components/schemas/UsuarioResponse"
                required:
                  - message
                  - data
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/usuario/onlyInfo/{id}:
    get:
      description: Obtener un usuario por ID sin relaciones
      summary: Obtener usuario básico
      tags:
        - Usuarios
      parameters:
        - schema:
            type: string
            pattern: ^\d+$
            description: ID del usuario
            example: "1"
          required: true
          description: ID del usuario
          name: id
          in: path
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: found one usuario
                  data:
                    $ref: "#/components/schemas/UsuarioResponse"
                required:
                  - message
                  - data
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/usuario/cookie:
    get:
      description: Obtener el usuario autenticado mediante el token JWT
      summary: Obtener usuario por token
      tags:
        - Usuarios
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Usuario encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: found one usuario
                    description: Mensaje de confirmación
                  data:
                    $ref: "#/components/schemas/UsuarioResponse"
                required:
                  - message
                  - data
        "400":
          description: Usuario no autenticado o token inválido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Token no proporcionado o inválido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/usuario/comments/{userId}:
    get:
      description: Obtener comentarios de un usuario específico
      summary: Obtener comentarios por ID de usuario
      tags:
        - Usuarios
      parameters:
        - schema:
            type: string
            pattern: ^\d+$
            description: ID del usuario
            example: "1"
          required: true
          description: ID del usuario
          name: userId
          in: path
        - schema:
            type: number
            minimum: 1
            maximum: 50
            default: 5
            description: Número máximo de comentarios por página
            example: 5
          required: false
          description: Número máximo de comentarios por página
          name: maxItems
          in: query
        - schema:
            type: number
            minimum: 1
            default: 1
            description: Número de página
            example: 1
          required: false
          description: Número de página
          name: page
          in: query
        - schema:
            type: string
            description: Campo por el cual ordenar
            example: fecha
          required: false
          description: Campo por el cual ordenar
          name: orderBy
          in: query
      responses:
        "200":
          description: Comentarios encontrados exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: found comments for user
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        comentario:
                          type: string
                        calificacion:
                          type: number
                          minimum: 1
                          maximum: 5
                        fechaCreacion:
                          type: string
                        cliente:
                          type: object
                          properties:
                            id:
                              type: number
                            nombre:
                              type: string
                            apellido:
                              type: string
                          required:
                            - id
                            - nombre
                            - apellido
                      required:
                        - id
                        - comentario
                        - calificacion
                        - fechaCreacion
                        - cliente
                  pagination:
                    type: object
                    properties:
                      page:
                        type: number
                      maxItems:
                        type: number
                      totalComments:
                        type: number
                      totalPages:
                        type: number
                    required:
                      - page
                      - maxItems
                      - totalComments
                      - totalPages
                  average:
                    type: number
                    example: 4.2
                required:
                  - message
                  - data
                  - pagination
                  - average
        "404":
          description: Usuario no encontrado o sin comentarios
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/usuario/prestatarios/{tipoServicio}/{tarea}/{zona}/{orderBy}:
    get:
      tags:
        - Usuarios
      summary: Buscar prestatarios por tipo de servicio, zona y tarea
      description: Busca prestatarios filtrados por tipo de servicio, zona y tarea
        específica con paginación
      parameters:
        - schema:
            type: string
            description: Tipo de servicio a filtrar ("Todos" para no filtrar)
            example: Plomería
          required: true
          description: Tipo de servicio a filtrar ("Todos" para no filtrar)
          name: tipoServicio
          in: path
        - schema:
            type: string
            description: Zona a filtrar ("Todas" para no filtrar)
            example: Centro
          required: true
          description: Zona a filtrar ("Todas" para no filtrar)
          name: zona
          in: path
        - schema:
            type: string
            description: Tarea específica a filtrar (opcional)
            example: Reparación de canillas
          required: false
          description: Tarea específica a filtrar (opcional)
          name: tarea
          in: path
        - schema:
            type: string
            enum:
              - nombre
              - calificacion
            description: Campo por el cual ordenar los resultados
            example: calificacion
          required: false
          description: Campo por el cual ordenar los resultados
          name: orderBy
          in: path
        - schema:
            type: number
            minimum: 1
            maximum: 50
            default: 6
            description: Número máximo de elementos por página
            example: 6
          required: false
          description: Número máximo de elementos por página
          name: maxItems
          in: query
        - schema:
            type: number
            minimum: 1
            default: 1
            description: Número de página
            example: 1
          required: false
          description: Número de página
          name: page
          in: query
      responses:
        "200":
          description: Prestatarios encontrados exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FindPrestatariosResponse"
        "404":
          description: No se encontraron prestatarios con los criterios especificados
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
