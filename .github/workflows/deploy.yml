name: üöÄ Despliegue autom√°tico a Hostinger

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-hostinger
      cancel-in-progress: true

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üì¶ Instalar pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: ‚ôªÔ∏è Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ hashFiles('frontend/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-

      - name: üßπ Limpiar dist y cach√©
        working-directory: frontend
        run: |
          rm -rf dist node_modules/.tmp

      - name: üîß Instalar dependencias
        working-directory: frontend
        run: pnpm install --no-frozen-lockfile

      - name: üèóÔ∏è Construir la aplicaci√≥n
        working-directory: frontend
        run: pnpm build

      - name: üìÇ Verificar build
        run: |
          ls -la frontend/dist | head -50
          echo "Tama√±o total (bytes):" \
            $(du -sb frontend/dist | cut -f1)

      - name: üîê Calcular hash de contenido dist
        id: hash
        run: |
          find frontend/dist -type f -print0 | sort -z | xargs -0 sha256sum | sha256sum | cut -d' ' -f1 > dist.hash
          echo "hash=$(cat dist.hash)" >> $GITHUB_OUTPUT
          echo "Hash dist: $(cat dist.hash)"

      - name: üóÉÔ∏è Cache hash (para saltar despliegues repetidos)
        id: cache-dist-hash
        uses: actions/cache@v4
        with:
          path: dist.hash
          key: dist-hash-${{ steps.hash.outputs.hash }}
          restore-keys: |
            dist-hash-

      - name: üì¶ Subir artifact del build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

      # Paso de despliegue FTP
      - name: üöÄ Subir a Hostinger por FTP
        # Despliega s√≥lo si el contenido cambi√≥ (o si se fuerza manualmente quitando esta condici√≥n)
        if: steps.cache-dist-hash.outputs.cache-hit != 'true'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps # Cambiado a FTPS expl√≠cito (TLS). Si falla revertir a ftp.
          local-dir: frontend/dist/
          server-dir: ./ # El root del usuario apunta a public_html
          exclude: |
            **/.git*
            **/node_modules/**
            **/*.map
            **/story*/**
          log-level: verbose
          dangerous-clean-slate: false # Volvemos a no borrar todo en cada deploy

      - name: ‚è≠Ô∏è Saltado (build sin cambios)
        if: steps.cache-dist-hash.outputs.cache-hit == 'true'
        run: echo "Deploy omitido: hash ya desplegado." 

      - name: üîé Health check sitio
        if: always()
        run: |
          set -e
          echo "HEAD https://reformix.site"
          (curl -I --max-time 15 -s https://reformix.site || curl -I --max-time 15 -s http://reformix.site) | head -15
          echo "Primeras l√≠neas del index:";
          (curl -s --max-time 20 https://reformix.site || curl -s --max-time 20 http://reformix.site) | head -20 || true
          echo "Fin health check"
