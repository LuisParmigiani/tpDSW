name: Deploy Frontend to Hostinger

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify FTP credentials
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: |
          echo "Testing connection to: $FTP_SERVER"
          echo "Username: $FTP_USERNAME"
          echo "Password length: $(echo -n "$FTP_PASSWORD" | wc -c) characters"

          # Install lftp for testing
          sudo apt-get update -qq && sudo apt-get install -y --no-install-recommends lftp

          # Test FTP connection (Hostinger IP-based FTP)
          echo "Testing FTP connection to Hostinger..."
          if lftp -u "$FTP_USERNAME","$FTP_PASSWORD" -e "set ftp:ssl-allow no; set net:max-retries 2; pwd; ls; bye" "$FTP_SERVER"; then
            echo "✅ FTP connection successful"
            echo "PROTOCOL=ftp" >> $GITHUB_ENV
            echo "CONNECTION_OK=true" >> $GITHUB_ENV
          else
            echo "❌ FTP connection failed, trying FTPS..."
            if lftp -u "$FTP_USERNAME","$FTP_PASSWORD" -e "set ftp:ssl-force yes; set ftp:ssl-protect-data yes; set ssl:verify-certificate no; set net:max-retries 2; pwd; bye" "$FTP_SERVER"; then
              echo "✅ FTPS connection successful"
              echo "PROTOCOL=ftps" >> $GITHUB_ENV
              echo "CONNECTION_OK=true" >> $GITHUB_ENV
            else
              echo "❌ Both FTP and FTPS failed - check credentials"
              echo "CONNECTION_OK=false" >> $GITHUB_ENV
              exit 1
            fi
          fi

      - name: Setup Node.js
        if: env.CONNECTION_OK == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        if: env.CONNECTION_OK == 'true'
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Configure pnpm for deployment
        if: env.CONNECTION_OK == 'true'
        working-directory: frontend
        run: |
          pnpm config set registry https://registry.npmjs.org/
          pnpm config set fetch-retries 5
          pnpm config set fetch-retry-factor 2
          pnpm config set fetch-retry-mintimeout 10000
          pnpm config set fetch-retry-maxtimeout 60000

      - name: Install dependencies
        if: env.CONNECTION_OK == 'true'
        working-directory: frontend
        run: pnpm install --no-frozen-lockfile --prefer-offline
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build project
        if: env.CONNECTION_OK == 'true'
        working-directory: frontend
        run: pnpm build

      - name: List build output
        if: env.CONNECTION_OK == 'true'
        run: |
          echo "Build output files:"
          find frontend/dist -type f -print | head -20 | sed 's/^/  📄 /'
          echo "Total files to deploy: $(find frontend/dist -type f | wc -l)"

      - name: Deploy to Hostinger via FTP
        if: env.CONNECTION_OK == 'true'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ${{ env.PROTOCOL }}
          local-dir: frontend/dist/
          server-dir: public_html/
          exclude: |
            **/.git*
            **/node_modules/**
            **/*.map
            **/.DS_Store
            **/Thumbs.db
            **/story*/**
          log-level: verbose
          dangerous-clean-slate: false
          timeout: 600000
